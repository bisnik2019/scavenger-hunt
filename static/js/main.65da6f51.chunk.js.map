{"version":3,"sources":["LocationPage.js","MainPage.js","AuthPage.js","App.js","serviceWorker.js","index.js"],"names":["LocationPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","log","renderToolbar","bind","assertThisInitialized","scanBarCode","getMap","react_default","a","createElement","react_onsenui","className","locationName","window","open","concat","replace","_this2","location","locations","id","title","src","image","alt","style","width","description","margin","onClick","modifier","Component","MainPage","renderRow","pushPage","navigator","component","row","index","key","objectID","length","tappable","subtitle","dataSource","renderHeader","AuthPage","state","username","password","handleUsernameChange","handlePasswordChange","handleClick","e","setState","target","value","ons","alert","display","justifyContent","alignItems","height","textAlign","onChange","float","placeholder","type","App","renderPage","route","React","swipeable","initialRoute","hasBackButton","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.65da6f51.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport * as ons from 'onsenui'\r\nimport * as Ons from 'react-onsenui'\r\n\r\nclass LocationPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this.props);\r\n\r\n    this.renderToolbar = this.renderToolbar.bind(this);\r\n    this.scanBarCode = this.scanBarCode.bind(this);\r\n    this.getMap = this.getMap.bind(this);\r\n  }\r\n\r\n  renderToolbar() {\r\n    return (\r\n      <Ons.Toolbar>\r\n        <div className=\"left\">\r\n          <Ons.BackButton></Ons.BackButton>\r\n        </div>\r\n        <div className=\"center\">\r\n          Tourism Moose Jaw App\r\n      </div>\r\n      </Ons.Toolbar>\r\n    );\r\n  }\r\n\r\n  scanBarCode() {\r\n\r\n  }\r\n\r\n  getMap(locationName) {\r\n    window.open(`https://maps.google.com/?q=${locationName.replace(' ', '+')}`);\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    const location = this.props.locations[this.props.id];\r\n\r\n    return (\r\n      <Ons.Page renderToolbar={this.renderToolbar}>\r\n        <Ons.Card>\r\n          <div className=\"title right\">\r\n            {location.title}\r\n          </div>\r\n          <img src={location.image} alt={location.title} style={{width: '100%'}} />\r\n          <div className=\"content\">\r\n            {location.description}\r\n          </div>\r\n          <section style={{margin: '16px'}}>\r\n            <div style={{margin: '6px'}}>\r\n              <Ons.Button onClick={this.scanBarCode} modifier='large'>I am here</Ons.Button>\r\n            </div>\r\n            <div style={{margin: '6px'}}>\r\n              <Ons.Button onClick={() => this.getMap(location.title)} modifier='large outline'>Get directions</Ons.Button>\r\n            </div>\r\n          </section>\r\n        </Ons.Card>\r\n      </Ons.Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LocationPage;","import React, { Component } from 'react';\r\nimport * as ons from 'onsenui'\r\nimport * as Ons from 'react-onsenui'\r\nimport LocationPage from './LocationPage'\r\n\r\nclass MainPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.renderToolbar = this.renderToolbar.bind(this);\r\n    this.renderRow = this.renderRow.bind(this);\r\n    this.pushPage = this.pushPage.bind(this);\r\n  }\r\n\r\n  pushPage(navigator, id) {\r\n    navigator.pushPage({\r\n      component: LocationPage,\r\n      props: {\r\n        locations: this.props.locations,\r\n        id: id\r\n      }\r\n    });\r\n  }\r\n\r\n  renderToolbar() {\r\n    return (\r\n      <Ons.Toolbar>\r\n        <div className=\"left\">\r\n          <Ons.BackButton></Ons.BackButton>\r\n        </div>\r\n        <div className=\"center\">\r\n          Tourism Moose Jaw App\r\n      </div>\r\n      </Ons.Toolbar>\r\n    );\r\n  }\r\n\r\n  renderRow(row, index) {\r\n    return (\r\n      <Ons.ListItem\r\n        key={row.objectID}\r\n        modifier={index === this.props.locations.length - 1 ? 'longdivider' : null}\r\n        onClick={() => {\r\n          /* actions.selectLocation(id); */\r\n          this.pushPage(this.props.navigator, row.objectID);\r\n        }}\r\n        tappable\r\n      >\r\n        <div className = 'left'>\r\n          <img src={row.image} className='list-item__thumbnail' />\r\n        </div>\r\n        <div className='center'>\r\n          <div className='list-item__title'>\r\n            {row.title}\r\n          </div>\r\n          <div className='list-item__subtitle'>\r\n            {row.subtitle}\r\n          </div>\r\n        </div>\r\n        \r\n      </Ons.ListItem>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Ons.Page renderToolbar={this.renderToolbar}>\r\n        <Ons.List\r\n          dataSource={this.props.locations}\r\n          renderRow={this.renderRow}\r\n          renderHeader={() => <Ons.ListHeader>Locations</Ons.ListHeader>} \r\n        />\r\n      </Ons.Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;","import React, { Component } from 'react';\r\nimport * as ons from 'onsenui'\r\nimport * as Ons from 'react-onsenui'\r\nimport MainPage from './MainPage';\r\n\r\nclass AuthPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this.props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n    };\r\n\r\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.renderToolbar = this.renderToolbar.bind(this);\r\n    this.pushPage = this.pushPage.bind(this);\r\n  }\r\n\r\n  // pushPage(nav) {\r\n  //   nav.pushPage({\r\n  //     title: 'Main page',\r\n  //     hasBackButton: true\r\n  //   });\r\n  // }\r\n\r\n  pushPage(navigator) {\r\n    navigator.pushPage({\r\n      component: MainPage,\r\n      props: {\r\n        locations: this.props.locations\r\n      }\r\n    });\r\n  }\r\n\r\n  handleUsernameChange(e) {\r\n    this.setState({ username: e.target.value });\r\n  }\r\n\r\n  handlePasswordChange(e) {\r\n    this.setState({ password: e.target.value });\r\n  }\r\n\r\n  handleClick() {\r\n    if (this.state.username === '1' && this.state.password === '2') {\r\n      //ons.notification.alert('You are now signed in!');\r\n      this.pushPage(this.props.navigator);\r\n    } else {\r\n      ons.notification.alert('Username or password incorrect!');\r\n    }\r\n  }\r\n\r\n  renderToolbar() {\r\n    return (\r\n      <Ons.Toolbar>\r\n        <div className=\"left\">\r\n          <Ons.Icon></Ons.Icon>\r\n        </div>\r\n        <div className=\"center\">\r\n          Tourism Moose Jaw App\r\n      </div>\r\n      </Ons.Toolbar>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Ons.Page renderToolbar={this.renderToolbar}>\r\n          <div style={{ display: 'flex', justifyContent:'center', alignItems: 'center', height: '100%'}}>\r\n            <section style={{ textAlign: 'center'}}>\r\n              <p>\r\n                <Ons.Input\r\n                  value={this.state.username}\r\n                  onChange={this.handleUsernameChange}\r\n                  modifier='underbar'\r\n                  float\r\n                  placeholder='Username' />\r\n              </p>\r\n              <p>\r\n                <Ons.Input\r\n                  value={this.state.password}\r\n                  onChange={this.handlePasswordChange}\r\n                  modifier='underbar'\r\n                  type='password'\r\n                  float\r\n                  placeholder='Password' />\r\n              </p>\r\n              <p>\r\n                <Ons.Button onClick={this.handleClick}>Sign in</Ons.Button>\r\n                <Ons.Button modifier='large--quiet'>Don't have an account? Create one</Ons.Button>\r\n              </p>\r\n            </section>\r\n          </div>\r\n        </Ons.Page>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthPage;","import React, { Component } from 'react';\nimport * as ons from 'onsenui'\nimport * as Ons from 'react-onsenui'\nimport './App.css';\nimport AuthPage from './AuthPage';\nimport MainPage from './MainPage';\nimport LocationPage from './LocationPage';\n\nconst locations = [\n  {\n    title: \"Tunnels of Moose Jaw\",\n    subtitle: \"Guided tour\",\n    description: \"Head beneath the streets of downtown Moose Jaw and undergo two guided theatrical tours. Relive Al Capone’s bootlegging days in the Chicago Connection tour and experience first-hand the hardships of early Chinese immigrants in the Passage to Fortune tour. We are a family friendly attraction that offers an experience like no other.\",\n    image: 'https://www.tunnelsofmoosejaw.com/fileadmin/template1/images/chicagoconnectionlogo-large.jpg',\n    objectID: 0\n  },\n  {\n    title: \"Mac the Moose\",\n    subtitle: \"A steel and concrete sculpture of a moose\",\n    description: \"Mac the Moose is a steel and concrete sculpture of a moose in Moose Jaw, Saskatchewan. Formerly the World's Largest Moose, it is claimed to be North America's largest moose as well as the World's Second Largest Moose at 32 feet (9.8 m) feet tall and a weight of approximately 10 long tons (10,000 kg)\",\n    image: \"https://i.pinimg.com/originals/7a/cb/94/7acb940429f3fe4efecb50ad26ff31f3.jpg\",\n    objectID: 1\n  },\n  {\n    title: \"The Casino Moose Jaw\",\n    subtitle: \"First-class gaming\",\n    description: \"Enjoy first-class gaming, relaxed dining and world-class entertainment at one of Western Canada's premier tourist destinations.\",\n    image: \"https://casinomoosejaw.com/res/img/logoCasinomoosejaw.png\",\n    objectID: 2\n  }\n]\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      locations: locations,\n    };\n\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.renderToolbar = this.renderToolbar.bind(this);\n    this.renderPage = this.renderPage.bind(this);\n  }\n\n  handleUsernameChange(e) {\n    this.setState({ username: e.target.value });\n  }\n\n  handlePasswordChange(e) {\n    this.setState({ password: e.target.value });\n  }\n\n  handleClick() {\n    if (this.state.username === 'bob' && this.state.password === 'secret') {\n      ons.notification.alert('You are now signed in!');\n    } else {\n      ons.notification.alert('Username or password incorrect!');\n    }\n  }\n\n  renderToolbar() {\n    return (\n    <Ons.Toolbar>\n      <div className=\"left\">\n        <Ons.Icon></Ons.Icon>\n      </div>\n      <div className=\"center\">\n        Tourism Moose Jaw App\n      </div>\n    </Ons.Toolbar>\n    );\n  }\n\n  renderPage(route, navigator) {\n    // if (route.title === 'Auth page') {\n    //   return <AuthPage nav={navigator} />\n    // } else if (route.title === 'Main page') {\n    //   return <MainPage locations={this.state.locations} nav={navigator} />\n    // } else if (route.title === 'Location page') {\n    //   return <LocationPage locations={this.state.locations} nav={navigator} />\n    // }\n    route.props = route.props || {};\n    route.props.navigator = navigator;\n\n    return React.createElement(route.component, route.props);\n  }\n\n  render() {\n    return (\n      <Ons.Navigator\n        swipeable\n        renderPage={this.renderPage}\n        initialRoute={{\n          component: AuthPage,\n          props: {locations: this.state.locations},\n          hasBackButton: false,\n        }}\n      />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif (module.hot) {\n  module.hot.accept();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}